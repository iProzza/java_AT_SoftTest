plugins{
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}


//apply plugin: 'java'


repositories {
    mavenCentral()
}

//configurations {
//    agent
//}

dependencies {
    testImplementation group: 'org.testng', name: 'testng', version: '7.7.1'
    testImplementation 'org.seleniumhq.selenium:selenium-java:3.5.2'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testImplementation group: 'com.beust', name: 'jcommander', version: '1.82'
    testImplementation group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.20'
    testImplementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.6'
    testImplementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.32'
    testImplementation group: 'org.hibernate', name: 'hibernate-core', version: '6.2.0.CR4'

    testImplementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.21.0'
    testImplementation group: 'io.qameta.allure', name: 'allure-commandline', version: '2.21.0'
    testImplementation group: 'io.qameta.allure', name: 'allure-rest-assured', version: '2.21.0'
    testImplementation group: 'io.qameta.allure', name: 'allure-java-commons', version: '2.21.0'
    testImplementation group: 'ru.yandex.qatools.allure', name: 'allure-testng-adaptor', version: '1.5.4'
    testImplementation group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.7'

//    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
//    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.8.0'

}

task testGroups (type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty('browser')){
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('platform')){
        systemProperty 'platform', "${platform}"
    }
    if (project.hasProperty('target')){
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty('verifyUI')){
        systemProperty 'verifyUI', "${verifyUI}"
    }
}

//testGroups.doFirst {
//    jvmArgs "-javaagent:${configurations.agent.singleFile}"
//}

task testContacts (type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-contacts.xml'
    }
    if (project.hasProperty('browser')){
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('platform')){
        systemProperty 'platform', "${platform}"
    }
    if (project.hasProperty('target')){
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty('verifyUI')){
        systemProperty 'verifyUI', "${verifyUI}"
    }

}

test {
    useTestNG()
}

//tasks.withType(Test) {
//    scanForTestClasses = false
//    include "**/*Test.class" // whatever Ant pattern matches your test class files
//}